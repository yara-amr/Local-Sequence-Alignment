def substitution_matrix(aa1, aa2):
    # we used BLOSUM62 MATRIX
    blosum_matrix = {('C', 'C'): 9, ('C', 'S'): -1, ('C', 'T'): -1, ('C', 'P'): -3, ('C', 'A'): 0, ('C', 'G'): -3,
                     ('C', 'N'): -3, ('C', 'D'): -3, ('C', 'E'): -4, ('C', 'Q'): -3, ('C', 'H'): -3, ('C', 'R'): -3,
                     ('C', 'K'): -3, ('C', 'M'): -1, ('C', 'I'): -1, ('C', 'L'): -1, ('C', 'V'): -1, ('C', 'F'): -2,
                     ('C', 'Y'): -2, ('C', 'W'): -2,
                     ('S', 'S'): 5, ('S', 'T'): -1, ('S', 'P'): -1, ('S', 'A'): 1, ('S', 'G'): 0, ('S', 'N'): 1,
                     ('S', 'D'): 0, ('S', 'E'): 0, ('S', 'Q'): 0, ('S', 'H'): -1, ('S', 'R'): -1, ('S', 'K'): 0,
                     ('S', 'M'): -1, ('S', 'I'): -2, ('S', 'L'): -2, ('S', 'V'): -2, ('S', 'F'): -2, ('S', 'Y'): -2,
                     ('S', 'W'): -3,
                     ('T', 'T'): 5, ('T', 'P'): 1, ('T', 'A'): -1, ('T', 'G'): 1, ('T', 'N'): 0, ('T', 'D'): 1,
                     ('T', 'E'): 0, ('T', 'Q'): 0, ('T', 'H'): 0, ('T', 'R'): -1, ('T', 'K'): 0, ('T', 'M'): -1,
                     ('T', 'I'): -1, ('T', 'L'): -2, ('T', 'V'): -2, ('T', 'F'): -2, ('T', 'Y'): -2, ('T', 'W'): -3,

                     ('P', 'P'): 7, ('P', 'A'): -1, ('P', 'G'): -2, ('P', 'N'): -2, ('P', 'D'): -1, ('P', 'E'): -1,
                     ('P', 'Q'): -1, ('P', 'H'): -2, ('P', 'R'): -2, ('P', 'K'): -1, ('P', 'M'): -2, ('P', 'I'): -3,
                     ('P', 'L'): -3, ('P', 'V'): -2, ('P', 'F'): -4, ('P', 'Y'): -3, ('P', 'W'): -4,

                     ('A', 'A'): 4, ('A', 'G'): 0, ('A', 'N'): -2, ('A', 'D'): -2, ('A', 'E'): -1, ('A', 'Q'): -1,
                     ('A', 'H'): -2, ('A', 'R'): -1, ('A', 'K'): -1, ('A', 'M'): -1, ('A', 'I'): -1, ('A', 'L'): -1,
                     ('A', 'V'): 0, ('A', 'F'): -2, ('A', 'Y'): -2, ('A', 'W'): -3,
                     ('G', 'G'): 6, ('G', 'N'): 0, ('G', 'D'): -1, ('G', 'E'): -2, ('G', 'Q'): -2, ('G', 'H'): -2,
                     ('G', 'R'): -2, ('G', 'K'): -2, ('G', 'M'): -3, ('G', 'I'): -4, ('G', 'L'): -4, ('G', 'V'): -3,
                     ('G', 'F'): -3, ('G', 'Y'): -3, ('G', 'W'): -2,
                     ('N', 'N'): 6, ('N', 'D'): 1, ('N', 'E'): 0, ('N', 'Q'): 0, ('N', 'H'): 1, ('N', 'R'): 0,
                     ('N', 'K'): 0, ('N', 'M'): -2, ('N', 'I'): -3, ('N', 'L'): -3, ('N', 'V'): -3, ('N', 'F'): -3,
                     ('N', 'Y'): -2, ('N', 'W'): -4,
                     ('D', 'D'): 6, ('D', 'E'): 2, ('D', 'Q'): 0, ('D', 'H'): 1, ('D', 'R'): -2, ('D', 'K'): -1,
                     ('D', 'M'): -3, ('D', 'I'): -3, ('D', 'L'): -4, ('D', 'V'): -3, ('D', 'F'): -3, ('D', 'Y'): -3,
                     ('D', 'W'): -4,
                     ('E', 'E'): 5, ('E', 'Q'): 2, ('E', 'H'): 0, ('E', 'R'): 0, ('E', 'K'): 1, ('E', 'M'): -2,
                     ('E', 'I'): -3, ('E', 'L'): -3, ('E', 'V'): -2, ('E', 'F'): -3, ('E', 'Y'): -2, ('E', 'W'): -3,

                     ('Q', 'Q'): 5, ('Q', 'H'): 0, ('Q', 'R'): 1, ('Q', 'K'): 1, ('Q', 'M'): 0, ('Q', 'I'): -3,
                     ('Q', 'L'): -2, ('Q', 'V'): -2, ('Q', 'F'): -3, ('Q', 'Y'): -1, ('Q', 'W'): -2,

                     ('H', 'H'): 8, ('H', 'R'): 0, ('H', 'K'): -1, ('H', 'M'): -2, ('H', 'I'): -3, ('H', 'L'): -3,
                     ('H', 'V'): -3, ('H', 'F'): -1, ('H', 'Y'): -2, ('H', 'W'): -2,
                     ('R', 'R'): 5, ('R', 'K'): 2, ('R', 'M'): -1, ('R', 'I'): -3, ('R', 'L'): -2, ('R', 'V'): -3,
                     ('R', 'F'): -3, ('R', 'Y'): -2, ('R', 'W'): -3,
                     ('K', 'K'): 5, ('K', 'M'): -1, ('K', 'I'): -3, ('K', 'L'): -2, ('K', 'V'): -2, ('K', 'F'): -3,
                     ('K', 'Y'): -2, ('K', 'W'): -3,
                     ('M', 'M'): 5, ('M', 'I'): 1, ('M', 'L'): 2, ('M', 'V'): 1, ('M', 'F'): 0, ('M', 'Y'): -1,
                     ('M', 'W'): -1,
                     ('I', 'I'): 4, ('I', 'L'): 2, ('I', 'V'): 3, ('I', 'F'): 0, ('I', 'Y'): -1, ('I', 'W'): -3,

                     ('L', 'L'): 4, ('L', 'V'): 1, ('L', 'F'): 0, ('L', 'Y'): -1, ('L', 'W'): -2,
                     ('V', 'V'): 4, ('V', 'F'): -1, ('V', 'Y'): -1, ('V', 'W'): -3,
                     ('F', 'F'): 6, ('F', 'Y'): 3, ('F', 'W'): 1,
                     ('Y', 'Y'): 7, ('Y', 'W'): 2,
                     ('W', 'W'): 11}
    # getting the score between pair of amino acids
    pair = ('%s' % aa1, '%s' % aa2)
    rPair = ('%s' % aa2, '%s' % aa1)

    if pair in blosum_matrix:
        score = blosum_matrix[aa1, aa2]
        return score
    elif rPair in blosum_matrix:
        score = blosum_matrix[aa2, aa1]
        return score